<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:prism="http://prismlibrary.com"
             xmlns:dto="clr-namespace:Noise.RemoteClient.Dto;assembly=Noise.RemoteClient"
             xmlns:valueConverters="clr-namespace:Noise.RemoteClient.ValueConverters;assembly=Noise.RemoteClient"
             xmlns:controls="clr-namespace:Noise.RemoteClient.Controls;assembly=Noise.RemoteClient"
             prism:ViewModelLocator.AutowireViewModel="True"
             x:Class="Noise.RemoteClient.Views.Queue"
             x:Name="_queueView"
             Title="Queue">

    <ContentPage.Resources>
        <ResourceDictionary>
            <valueConverters:TimeSpanConverter x:Key="TimeSpanConverter"/>

            <DataTemplate x:Key="QueuedTrackTemplate" x:DataType="dto:UiQueuedTrack">
                <ViewCell>
                    <SwipeView>
                        <SwipeView.LeftItems>
                            <SwipeItems>
                                <SwipeItemView Command="{Binding Path=BindingContext.Suggestions, Source={x:Reference Name=_queueView}}" 
                                               CommandParameter="{Binding .}">
                                    <Label Margin="15,0" HorizontalTextAlignment="Center" Text="Suggestions" FontSize="Medium" VerticalTextAlignment="Center"/>
                                </SwipeItemView>
                            </SwipeItems>
                        </SwipeView.LeftItems>

                        <Grid Margin="5,0,5,3" RowSpacing="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label x:Name="_trackName" Grid.Row="0" Grid.Column="0" Style="{StaticResource ListItemHeaderStyle}" Text="{Binding TrackName}">
                                <Label.Triggers>
                                    <DataTrigger Binding="{Binding IsPlaying}" Value="True" TargetType="Label">
                                        <Setter Property="TextColor" Value="{StaticResource PlayColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsStrategyQueued}" Value="True" TargetType="Label">
                                        <Setter Property="FontAttributes" Value="Bold, Italic"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding HasPlayed}" Value="True" TargetType="Label">
                                        <Setter Property="Opacity" Value="0.4"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>

                            <controls:SvgButton Grid.Row="0" Grid.Column="1" VerticalOptions="Center" HeightRequest="20" IsVisible="{Binding IsFavorite}"
                                                Source="Noise.RemoteClient.Resources.Images.Favorite.svg"/>

                            <Label Grid.Row="0" Grid.Column="2" Margin="0,0,5,0" Style="{StaticResource ListItemHeaderStyle}" 
                                   Text="{Binding TrackDuration, Converter={StaticResource TimeSpanConverter}}">
                                <Label.Triggers>
                                    <DataTrigger Binding="{Binding IsPlaying}" Value="True" TargetType="Label">
                                        <Setter Property="TextColor" Value="{StaticResource PlayColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding HasPlayed}" Value="True" TargetType="Label">
                                        <Setter Property="Opacity" Value="0.4"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>

                            <StackLayout Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" Margin="5,0,0,0">
                                <Label Style="{StaticResource ListItemDetailStyle}" Text="{Binding ArtistName}"/>
                                <Label Style="{StaticResource ListItemDetailStyle}" Text="/"/>
                                <Label Style="{StaticResource ListItemDetailStyle}" Text="{Binding AlbumName}"/>

                                <StackLayout.Triggers>
                                    <DataTrigger Binding="{Binding HasPlayed}" Value="True" TargetType="StackLayout">
                                        <Setter Property="Opacity" Value="0.6"/>
                                    </DataTrigger>
                                </StackLayout.Triggers>
                            </StackLayout>
                        </Grid>
                    </SwipeView>
                </ViewCell>
            </DataTemplate>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ListView Grid.Row="0" Margin="5" ItemsSource="{Binding QueueList}" HasUnevenRows="True" ItemTemplate="{StaticResource QueuedTrackTemplate}"/>

            <StackLayout Grid.Row="1" Margin="10,0,0,5" Orientation="Horizontal">
                <Button Margin="3,0" Text="Play" Command="{Binding Play}"/>
                <Button Margin="3,0" Text="Pause" Command="{Binding Pause}"/>
                <Button Margin="3,0" Text="Stop" Command="{Binding Stop}"/>
                <Button Margin="3,0" Text="Previous" Command="{Binding PlayPrevious}"/>
                <Button Margin="3,0" Text="Next" Command="{Binding PlayNext}"/>
                <Button Margin="3,0" Text="Replay" Command="{Binding ReplayTrack}"/>
            </StackLayout>
        </Grid>
    </ContentPage.Content>

</ContentPage>