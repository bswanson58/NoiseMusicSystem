<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:prism="http://prismlibrary.com"
             xmlns:dto="clr-namespace:Noise.RemoteClient.Dto;assembly=Noise.RemoteClient"
             xmlns:valueConverters="clr-namespace:Noise.RemoteClient.ValueConverters;assembly=Noise.RemoteClient"
             prism:ViewModelLocator.AutowireViewModel="True"
             x:Class="Noise.RemoteClient.Views.Queue"
             Title="Queue">

    <ContentPage.Resources>
        <ResourceDictionary>
            <valueConverters:TimeSpanConverter x:Key="TimeSpanConverter"/>

            <DataTemplate x:Key="QueuedTrackTemplate" x:DataType="dto:UiQueuedTrack">
                <ViewCell>
                    <Grid Margin="5,0,5,3" RowSpacing="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label x:Name="_trackName" Grid.Row="0" Grid.Column="0" Style="{StaticResource ListItemHeaderStyle}" Text="{Binding TrackName}">
                            <Label.Triggers>
                                <DataTrigger Binding="{Binding IsPlaying}" Value="True" TargetType="Label">
                                    <Setter Property="TextColor" Value="#FF68BB68"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsStrategyQueued}" Value="True" TargetType="Label">
                                    <Setter Property="FontAttributes" Value="Bold, Italic"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding HasPlayed}" Value="True" TargetType="Label">
                                    <Setter Property="Opacity" Value="0.4"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Label Grid.Row="0" Grid.Column="1" Style="{StaticResource ListItemHeaderStyle}" 
                               Text="{Binding TrackDuration, Converter={StaticResource TimeSpanConverter}}"/>

                        <StackLayout Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="5,0,0,0">
                            <Label Style="{StaticResource ListItemDetailStyle}" Text="{Binding ArtistName}"/>
                            <Label Style="{StaticResource ListItemDetailStyle}" Text="/"/>
                            <Label Style="{StaticResource ListItemDetailStyle}" Text="{Binding AlbumName}"/>

                            <StackLayout.Triggers>
                                <DataTrigger Binding="{Binding HasPlayed}" Value="True" TargetType="StackLayout">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </DataTrigger>
                            </StackLayout.Triggers>
                        </StackLayout>
                    </Grid>
                </ViewCell>

            </DataTemplate>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <ListView Margin="5" ItemsSource="{Binding QueueList}" HasUnevenRows="True" ItemTemplate="{StaticResource QueuedTrackTemplate}"/>
    </ContentPage.Content>

</ContentPage>