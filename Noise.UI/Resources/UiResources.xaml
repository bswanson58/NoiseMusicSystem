<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
					xmlns:vml="clr-namespace:Noise.UI.Support"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:Adapters="clr-namespace:Noise.UI.Adapters"
					xmlns:ValueConverters="clr-namespace:Noise.UI.ValueConverters" 
					xmlns:Controls="clr-namespace:AC.AvalonControlsLibrary.Controls;assembly=AvalonControlsLibrary"
					xmlns:NoiseControls="clr-namespace:Noise.UI.Controls" 
                    xmlns:Dto="clr-namespace:Noise.UI.Dto" 
                    mc:Ignorable="d"
					>

	<vml:ViewModelLocator x:Key="ViewModelLocator">
		<vml:ViewModelLocator.Resolver>
			<vml:ViewModelResolver />
		</vml:ViewModelLocator.Resolver>
	</vml:ViewModelLocator>

	<ValueConverters:PublishedYearConverter x:Key="PublishedYearConverter"/>

	<ControlTemplate x:Key="RatingTemplate"  TargetType="{x:Type Controls:RatingSelector}">
		<!--It is important to set a backgroud color outwise the Mouse over event will not be fire and the items would not highlight on mouse over-->
		<Border BorderThickness="0" Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="1">
			<StackPanel Orientation="Horizontal" IsItemsHost="True"/>
		</Border>
	</ControlTemplate>

	<Style x:Key="RatingStyle" TargetType="{x:Type Controls:RatingSelector}">
		<Setter Property="RateItemColor" Value="Blue"/>
		<Setter Property="RateItemHoverColor" Value="LightBlue"/>
	</Style>

	<ContextMenu x:Key="ArtistMenu">
		<MenuItem Header="Rename Artist" Command="{Binding Path=Rename}"/>
	</ContextMenu>

	<HierarchicalDataTemplate x:Key="AlbumTemplate" DataType="{x:Type Dto:UiAlbum}">
		<Grid Margin="0,0,3,0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>

			<Button Grid.Column="0" Width="12" Height="12" Margin="0,0,3,0" Command="{Binding Path=PlayAlbum}"/>
			<TextBlock Grid.Column="1" Text="{Binding Path=Name}"/>
			<StackPanel Grid.Column="3" Orientation="Horizontal">
				<TextBlock Text="("/>
				<TextBlock Text="{Binding Path=PublishedYear, Converter={StaticResource PublishedYearConverter}}"/>
				<TextBlock Margin="0,0,3,0" Text=")"/>
				<TextBlock Foreground="{DynamicResource ControlTextColor}" Text="Tracks: "/>
				<TextBlock Text="{Binding Path=TrackCount}"/>
			</StackPanel>
		</Grid>
	</HierarchicalDataTemplate>

	<HierarchicalDataTemplate x:Key="ArtistAlbumTemplate" DataType="{x:Type Adapters:ArtistTreeNode}" 
                              ItemTemplate="{StaticResource AlbumTemplate}" ItemsSource="{Binding Path=Children}">
		<Border Margin="0,1,0,2" CornerRadius="3" ContextMenu="{DynamicResource ArtistMenu}" Background="{DynamicResource TreeItemBackground}" BorderBrush="{DynamicResource ControlTextColor}">
			<Grid Margin="3,0,3,0">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>

				<TextBlock Grid.Row="0" Grid.Column="0" FontSize="16" Text="{Binding Path=Artist.Name}"/>
				<StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal">
					<CheckBox Margin="0,9,9,0" IsChecked="{Binding Path=Artist.UiIsFavorite, Mode=TwoWay}"/>
					<Controls:RatingSelector Margin="0,1,0,0" HorizontalAlignment="Right"  VerticalAlignment="Bottom" Style="{StaticResource RatingStyle}"
											 Template="{StaticResource RatingTemplate}" RatingSelected="{Binding Path=Artist.UiRating, Mode=TwoWay}"/>
				</StackPanel>
				<StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="11,0,0,0">
					<TextBlock Foreground="{DynamicResource ControlTextColor}" Text="Albums: "/>
					<TextBlock Text="{Binding Path=Artist.AlbumCount}"/>
				</StackPanel>
				<TextBlock Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" Text="{Binding Path=Artist.Genre}"/>
			</Grid>
		</Border>
	</HierarchicalDataTemplate>

	<!-- SearchTextBox -->
	<SolidColorBrush x:Key="SearchTextBox_Background" Color="White" />
	<SolidColorBrush x:Key="SearchTextBox_InactiveBackground" Color="#CCE0F8"/>
	<SolidColorBrush x:Key="SearchTextBox_Foreground" Color="Black" />
	<LinearGradientBrush x:Key="SearchTextBox_Border" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#FFABADB3" Offset="0.05" />
		<GradientStop Color="#FFE2E3EA" Offset="0.07" />
		<GradientStop Color="#FFE4E9EF" Offset="1" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="SearchTextBox_BorderMouseOver" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#FF5C97C1" Offset="0.05" />
		<GradientStop Color="#FFB9D7EB" Offset="0.07" />
		<GradientStop Color="#FFC7E2F1" Offset="1" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="SearchTextBox_SearchIconBorder" Color="White" />
	<SolidColorBrush x:Key="SearchTextBox_SearchIconBackground" Color="White" />
	<LinearGradientBrush x:Key="SearchTextBox_SearchIconBorder_MouseOver" StartPoint="0,0" EndPoint="0,1" >
		<GradientStop Color="#FFFFFFFF" Offset="0" />
		<GradientStop Color="#FFE5F4FC" Offset="1" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="SearchTextBox_SearchIconBackground_MouseOver" StartPoint="0,0" EndPoint="0,1" >
		<GradientStop Color="#FFE7F5FD" Offset="0" />
		<GradientStop Color="#FFD2EDFC" Offset="0.5" />
		<GradientStop Color="#FFB6E3FD" Offset="0.51" />
		<GradientStop Color="#FF9DD5F3" Offset="1" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="SearchTextBox_SearchIconBorder_MouseDown" StartPoint="0,0" EndPoint="0,1" >
		<GradientStop Color="#FFFFFFFF" Offset="0" />
		<GradientStop Color="#FFE5F4FC" Offset="1" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="SearchTextBox_SearchIconBackground_MouseDown" StartPoint="0,0" EndPoint="0,1" >
		<GradientStop Color="#FFE7F5FD" Offset="0" />
		<GradientStop Color="#FFD2EDFC" Offset="0.5" />
		<GradientStop Color="#FFB6E3FD" Offset="0.51" />
		<GradientStop Color="#FF9DD5F3" Offset="1" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="SearchTextBox_LabelTextColor" Color="Gray" />

	<Style x:Key="{x:Type NoiseControls:SearchTextBox}" TargetType="{x:Type NoiseControls:SearchTextBox}">
		<Setter Property="Background" Value="{StaticResource SearchTextBox_Background}" />
		<Setter Property="BorderBrush" Value="{StaticResource SearchTextBox_Border}" />
		<Setter Property="Foreground" Value="{StaticResource SearchTextBox_Foreground}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="LabelText" Value="Search" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="LabelTextColor" Value="{StaticResource SearchTextBox_LabelTextColor}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type NoiseControls:SearchTextBox}">
					<Border x:Name="Border"
				  Background="{TemplateBinding Background}"
				  BorderBrush="{TemplateBinding BorderBrush}"
				  BorderThickness="{TemplateBinding BorderThickness}">
						<Grid x:Name="LayoutGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<ScrollViewer Margin="2" x:Name="PART_ContentHost" Grid.Column="0" VerticalAlignment="Center"/>
							<Label x:Name="LabelText"
						 Margin="2"
						 Grid.Column="0"
						 Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},
											  Path=LabelTextColor}"
						 Content="{Binding RelativeSource={RelativeSource TemplatedParent},
										   Path=LabelText}"
						 Padding="2,0,0,0"
						 VerticalAlignment="Center"
						 FontStyle="Italic" />

							<Border x:Name="PART_SpecifySearchType"
						  Grid.Column="1"
						  VerticalAlignment="Stretch"
						  HorizontalAlignment="Stretch"
						  BorderBrush="{StaticResource SearchTextBox_SearchIconBorder}"
						  >
								<Image x:Name="SpecifySearchType"
							   Stretch="None"
							   Width="17"
							   Height="15" 
							   HorizontalAlignment="Center"
							   VerticalAlignment="Center"
							   Source="pack://application:,,,/Noise.UI;component/Resources/SearchCategory.png" ToolTip="Search Options"
							   
							   />
							</Border>

							<Border x:Name="PART_SearchIconBorder"
						  Grid.Column="2"
						  VerticalAlignment="Stretch"
						  HorizontalAlignment="Stretch"
						  BorderBrush="{StaticResource SearchTextBox_SearchIconBorder}"
						  >
								<Image x:Name="SearchIcon"
							   Stretch="None"
							   Width="17"
							   Height="15" 
							   HorizontalAlignment="Center"
							   VerticalAlignment="Center"
							   Source="pack://application:,,,/Noise.UI;component/Resources/Search.png" ToolTip="Click to search"/>
							</Border>


							<Border x:Name="PART_PreviousItem"
						Grid.Column="3"
						VerticalAlignment="Stretch"
						HorizontalAlignment="Stretch"
						BorderBrush="{StaticResource SearchTextBox_SearchIconBorder}">
								<Image x:Name="PreviousIcon"
						   Stretch="None"
						   Width="17"
						   Height="15" 
						   HorizontalAlignment="Center"
						   VerticalAlignment="Center"
						   Source="pack://application:,,,/Noise.UI;component/Resources/SearchPrevious.png" ToolTip="Previous keywords"
					   />
							</Border>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True" SourceName="LabelText">
							<Setter Property="Background" TargetName="LayoutGrid" Value="#F3F9F2" />
							<Setter Property="Cursor" Value="IBeam" />
						</Trigger>

						<Trigger Property="IsMouseOver" Value="False">
							<Setter Property="Background" TargetName="LayoutGrid" Value="{StaticResource SearchTextBox_InactiveBackground}" />
						</Trigger>

						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter Property="BorderBrush" Value="{StaticResource SearchTextBox_BorderMouseOver}" />
						</Trigger>

						<Trigger Property="HasText" Value="True">
							<Setter Property="Visibility" TargetName="LabelText" Value="Hidden" />
						</Trigger>

						<!--						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasText" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Source" TargetName="SearchIcon" Value="pack://application:,,,/Noise.UI;component/Resources/SearchClear.png" />
						</MultiTrigger>
-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- LinkLabel Style -->
	<Style TargetType="{x:Type NoiseControls:LinkLabel}" BasedOn="{StaticResource {x:Type Label}}">
		<Setter Property="Foreground" Value="Blue"/>
		<Setter Property="HoverForeground" Value="Red"/>

		<Setter Property="HyperlinkStyle">
			<Setter.Value>
				<Style TargetType="Hyperlink">
					<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"/>
					<Style.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Foreground"  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverForeground}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</Style.Triggers>
				</Style>
			</Setter.Value>
		</Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type NoiseControls:LinkLabel}">
					<Border Background="{TemplateBinding Background}"
							  BorderThickness="{TemplateBinding BorderThickness}"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  Padding="{TemplateBinding Padding}"
							  SnapsToDevicePixels="true">
						<TextBlock Background="{TemplateBinding Background}"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Hyperlink x:Name="PART_InnerHyperlink"
										NavigateUri="{Binding RelativeSource= {RelativeSource TemplatedParent}, Path=Url}"
										Style= "{Binding RelativeSource= {RelativeSource TemplatedParent}, Path=HyperlinkStyle}"
										Command="{Binding RelativeSource= {RelativeSource TemplatedParent}, Path=Command}"
										CommandParameter="{Binding RelativeSource= {RelativeSource TemplatedParent}, Path=CommandParameter}"
										CommandTarget="{Binding RelativeSource= {RelativeSource TemplatedParent}, Path=CommandTarget}">
								<Adapters:BindableRun	BoundText="{Binding RelativeSource= {RelativeSource TemplatedParent}, Path=Content}"/>
							</Hyperlink>
						</TextBlock>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="LinkLabelBehavior" Value="NeverUnderline">
							<Setter TargetName="PART_InnerHyperlink" Property="TextDecorations"  Value="None"/>
						</Trigger>
						<Trigger Property="LinkLabelBehavior" Value="AlwaysUnderline">
							<Setter TargetName="PART_InnerHyperlink" Property="TextDecorations" Value="Underline"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true"/>
								<Condition Property="LinkLabelBehavior" Value="HoverUnderline"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_InnerHyperlink" Property="TextDecorations" Value="Underline"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="false"/>
								<Condition Property="LinkLabelBehavior" Value="HoverUnderline"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_InnerHyperlink" Property="TextDecorations" Value="None"/>
						</MultiTrigger>
						<Trigger SourceName="PART_InnerHyperlink" Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>