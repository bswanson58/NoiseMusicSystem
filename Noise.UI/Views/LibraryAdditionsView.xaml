<UserControl x:Class="Noise.UI.Views.LibraryAdditionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Adapters="clr-namespace:Noise.UI.Adapters"
             xmlns:Behaviours="clr-namespace:Noise.UI.Behaviours"
             xmlns:ValueConverters="clr-namespace:ReusableBits.Ui.ValueConverters;assembly=ReusableBits.Ui"
             xmlns:compMod="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:Behaviours1="clr-namespace:ReusableBits.Ui.Behaviours;assembly=ReusableBits.Ui"
             DataContext="{Binding LibraryAdditionsViewModel, Source={StaticResource ViewModelLocator}}"
             Tag="What's New"
             AllowDrop="{Binding DisplayMarker}"
             Behaviours1:ViewDisplayedNotifier.NotifyCommand="{Binding ViewDisplayed}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
            <!-- The AllowDrop property is used to hold the boolean flag for displaying the marker on the TabItem header -->
    
    <Control.Resources>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="#FF989898">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Behaviours:TreeViewItemBehaviour.IsBroughtIntoViewWhenSelected" Value="True" />

            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <!--                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/> -->
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <HierarchicalDataTemplate x:Key="NewAdditionItemTemplate" DataType="{x:Type Adapters:PlayListNode}">
            <Grid Margin="0,0,3,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="7"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Style="{StaticResource PlayButtonStyle}" Margin="3,3,5,3" Command="{Binding Path=Play}"/>
                <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path=Name}"/>
                <TextBlock Grid.Column="3" VerticalAlignment="Center" Text="{Binding Path=Duration, Converter={StaticResource TimeSpanConverter}}"/>
            </Grid>
        </HierarchicalDataTemplate>

        <ValueConverters:NumericRangeValueConverter x:Key="NumericRangeValueConverter" MinimumOutput="0.2" MaximumOutput="1.0"/>
        
        <HierarchicalDataTemplate x:Key="NewAdditionsTemplate"
                                    DataType="{x:Type Adapters:LibraryAdditionNode}"
                                    ItemTemplate="{StaticResource NewAdditionItemTemplate}"
                                    ItemsSource="{Binding Path=TrackList}">
            <Border x:Name="ItemPanel" Margin="0,1,0,2" CornerRadius="3" BorderBrush="{DynamicResource ControlTextColor}"
                    Opacity="{Binding Path=RelativeAge, Converter={StaticResource NumericRangeValueConverter}}">
                <Grid Margin="3,0,3,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Row="0" Grid.Column="0" Style="{StaticResource PlayButtonStyle}" Margin="0,0,3,0" Command="{Binding Path=Play}"/>
                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                        <TextBlock FontSize="16" Text="{Binding Path=Artist.Name}"/>
                        <TextBlock FontSize="16" Text="/"/>
                        <TextBlock FontSize="16" Text="{Binding Path=Album.Name}"/>
                    </StackPanel>
                </Grid>
            </Border>
            
            <DataTemplate.Triggers>
                <Trigger SourceName="ItemPanel" Property="IsMouseOver" Value="True">
                    <Setter TargetName="ItemPanel" Property="Opacity" Value="1.0"/>
                </Trigger>
            </DataTemplate.Triggers>
        </HierarchicalDataTemplate>

        <CollectionViewSource Source="{Binding NodeList}" x:Key="SortedNodes" >
            <CollectionViewSource.SortDescriptions>
                <compMod:SortDescription PropertyName="Album.DateAddedTicks" Direction="Descending"/>
                <!--compMod:SortDescription PropertyName="Artist.Name"/>
                <compMod:SortDescription PropertyName="Album.Name"/-->
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Control.Resources>

    <Grid>
        <GroupBox Style="{StaticResource SectionBorderStyle}" Header=" What's New ">
            <TreeView Grid.Row="0" BorderThickness="0"
                      ItemsSource="{Binding Source={StaticResource SortedNodes}}"
                      ItemTemplate="{StaticResource NewAdditionsTemplate}"
                      ItemContainerStyle="{DynamicResource TreeViewItemStyle}" />
        </GroupBox>
    </Grid>
</UserControl>
