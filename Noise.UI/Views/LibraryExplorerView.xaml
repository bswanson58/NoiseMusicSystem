<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Behaviours="clr-namespace:Noise.UI.Behaviours" 
             xmlns:Controls="clr-namespace:Noise.UI.Controls"
             xmlns:EventCommandTriggers="clr-namespace:Noise.UI.Behaviours.EventCommandTriggers"
             x:Class="Noise.UI.Views.LibraryExplorerView"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Tag="Library"
             Behaviours:VisualStateAdapter.VisualState="{Binding VisualStateName}"
             >
    <UserControl.Resources>
    	<Style x:Key="TreeViewItemFocusVisual">
    		<Setter Property="Control.Template">
    			<Setter.Value>
    				<ControlTemplate>
    					<Rectangle/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    		<Setter Property="Focusable" Value="False"/>
    		<Setter Property="Width" Value="16"/>
    		<Setter Property="Height" Value="16"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ToggleButton}">
    					<Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
    						<Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="#FF989898">
    							<Path.RenderTransform>
    								<RotateTransform Angle="135" CenterY="3" CenterX="3"/>
    							</Path.RenderTransform>
    						</Path>
    					</Border>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsMouseOver" Value="True">
    							<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
    							<Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
    						</Trigger>
    						<Trigger Property="IsChecked" Value="True">
    							<Setter Property="RenderTransform" TargetName="ExpandPath">
    								<Setter.Value>
    									<RotateTransform Angle="180" CenterY="3" CenterX="3"/>
    								</Setter.Value>
    							</Setter>
    							<Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
    							<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
    		<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
    		<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
    		<Setter Property="FontWeight" Value="Normal" />
    		<Setter Property="Behaviours:TreeViewItemBehaviour.IsBroughtIntoViewWhenSelected" Value="True" />

    		<Setter Property="Background" Value="Transparent"/>
    		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    		<Setter Property="Padding" Value="1,0,0,0"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type TreeViewItem}">
    					<Grid>
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition MinWidth="19" Width="Auto"/>
    							<ColumnDefinition Width="*"/>
    						</Grid.ColumnDefinitions>
    						<Grid.RowDefinitions>
    							<RowDefinition Height="Auto"/>
    							<RowDefinition/>
    						</Grid.RowDefinitions>
    						<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
    						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
    							<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    						</Border>

                            <Grid Grid.Row="1" Grid.Column="1">
                                <Behaviours:Reveal HorizontalAlignment="Left" VerticalAlignment="Top"
                                                   VerticalReveal="FromTopToBottom" IsExpanded="{TemplateBinding IsExpanded}">
                                    <ItemsPresenter x:Name="ItemsHost" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"/>
                                </Behaviours:Reveal>
                            </Grid>
                        </Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsExpanded" Value="false">
    							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
    						</Trigger>
    						<Trigger Property="HasItems" Value="false">
    							<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
    						</Trigger>
    						<Trigger Property="IsSelected" Value="true">
    							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
    							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
    						</Trigger>
    						<MultiTrigger>
    							<MultiTrigger.Conditions>
    								<Condition Property="IsSelected" Value="true"/>
    								<Condition Property="IsSelectionActive" Value="false"/>
    							</MultiTrigger.Conditions>
    							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    						</MultiTrigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Style.Triggers>
    			<Trigger Property="IsSelected" Value="True">
    				<Setter Property="FontWeight" Value="Bold" />
    			</Trigger>
    			<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
    				<Setter Property="ItemsPanel">
    					<Setter.Value>
    						<ItemsPanelTemplate>
    							<VirtualizingStackPanel/>
    						</ItemsPanelTemplate>
    					</Setter.Value>
    				</Setter>
    			</Trigger>
    		</Style.Triggers>
    	</Style>

        <DataTemplate x:Key="ScrollingPreviewTemplate">
            <StackPanel Width="65" HorizontalAlignment="Right" Orientation="Horizontal">
                <TextBlock FontSize="16" FontWeight="Bold" Text="{Binding Path=FirstItem.IndexString, Converter={StaticResource StringTruncateConverter}}"/>
                <TextBlock FontSize="16" Text=" - "/>
                <TextBlock FontSize="16" FontWeight="Bold" Text="{Binding Path=LastItem.IndexString, Converter={StaticResource StringTruncateConverter}}"/>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>
    
	<UserControl.DataContext>
		<Binding Path="LibraryExplorerViewModel" Source="{StaticResource ViewModelLocator}"/>
	</UserControl.DataContext>
    
    <GroupBox BorderThickness="1" BorderBrush="{DynamicResource TrimColor}" Header=" Library "  Margin="0">
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="IndexVisibility">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0:0:0.3"/>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="Normal"/>
                <VisualState x:Name="DisplayStrategy">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrategyList">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="StrategyList">
                            <EasingDoubleKeyFrame KeyTime="0" Value="300"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>
        <Grid Behaviours:GridUtils.RowDefinitions="*,Auto">
            <TreeView Grid.Row="0" BorderThickness="0"
                      VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
                      Behaviours:ScrollingPreview.VerticalScrollingPreviewTemplate="{DynamicResource ScrollingPreviewTemplate}"
                      ItemsSource="{Binding TreeViewSource.View}"
                      ItemTemplate="{Binding TreeViewItemTemplate}"
                      ItemContainerStyle="{DynamicResource TreeViewItemStyle}"
                  />
            
            <Controls:ExplorerStrategyList x:Name="StrategyList" Grid.Row="0" HorizontalAlignment="Left" Margin="0,0,0,0" Height="0" Opacity="0" VerticalAlignment="Bottom"/>

            <Border Grid.Row="1" BorderThickness="0" Margin="0,5,0,0">
                <Grid Behaviours:GridUtils.ColumnDefinitions="Auto,Auto,*,Auto">
                    <Button Grid.Column="0" Margin="3" Command="{Binding Path=ToggleStrategyDisplay}">
                        <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Margin="3,0,0,0" Text="View" Foreground="{DynamicResource ControlTextColor}"/>
                            <TextBlock Margin="0,0,3,0" FontFamily="Webdings" Text="5" FontSize="16" Foreground="{DynamicResource ControlTextColor}"/>
                        </StackPanel>
                    </Button>
                    <Button Grid.Column="1" Margin="3" Height="23" Width="23" ToolTip="Configure View" Foreground="{DynamicResource ControlTextColor}"
                            Content="{StaticResource Path_Configure}" Command="{Binding Path=ConfigureView}"/>
                    
                    <Button Grid.Column="3" Margin="3" Command="{Binding Filter}" Content="Filter" Foreground="{DynamicResource ControlTextColor}"/>
                </Grid>
            </Border>
        </Grid>
    </GroupBox>
</UserControl>
