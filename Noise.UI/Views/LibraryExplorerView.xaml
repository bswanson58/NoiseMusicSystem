<UserControl x:Class="Noise.UI.Views.LibraryExplorerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Behaviours="clr-namespace:Noise.UI.Behaviours"
             xmlns:Controls="clr-namespace:Noise.UI.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:EventCommandTriggers="clr-namespace:Noise.UI.Behaviours.EventCommandTriggers"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             Behaviours:VisualStateAdapter.VisualState="{Binding VisualStateName}"
             d:DesignHeight="300"
             d:DesignWidth="300"
             Tag="Library"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z" />
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="16"
                                Height="16"
                                Background="Transparent"
                                Padding="5,5,5,5">
                            <Path x:Name="ExpandPath"
                                  Data="{StaticResource TreeArrow}"
                                  Fill="Transparent"
                                  Stroke="#FF989898">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF1BBBFA" />
                                <Setter TargetName="ExpandPath" Property="Fill" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ExpandPath" Property="Fill" Value="#FF595959" />
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF262626" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Behaviours:TreeViewItemBehaviour.IsBroughtIntoViewWhenSelected" Value="True" />

            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="1,0,0,0" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander"
                                          ClickMode="Press"
                                          IsChecked="{Binding IsExpanded,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource ExpandCollapseToggleStyle}" />
                            <Border x:Name="Bd"
                                    Grid.Column="1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header"
                                                  HorizontalAlignment="Stretch"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>

                            <Grid Grid.Row="1" Grid.Column="1">
                                <Behaviours:Reveal HorizontalAlignment="Left"
                                                   VerticalAlignment="Top"
                                                   IsExpanded="{TemplateBinding IsExpanded}"
                                                   VerticalReveal="FromTopToBottom">
                                    <ItemsPresenter x:Name="ItemsHost" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}" />
                                </Behaviours:Reveal>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="ScrollingPreviewTemplate">
            <StackPanel Width="65"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                <TextBlock FontSize="16"
                           FontWeight="Bold"
                           Text="{Binding Path=FirstItem.IndexString,
                                          Converter={StaticResource StringTruncateConverter}}" />
                <TextBlock FontSize="16" Text=" - " />
                <TextBlock FontSize="16"
                           FontWeight="Bold"
                           Text="{Binding Path=LastItem.IndexString,
                                          Converter={StaticResource StringTruncateConverter}}" />
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <UserControl.DataContext>
        <Binding Path="LibraryExplorerViewModel" Source="{StaticResource ViewModelLocator}" />
    </UserControl.DataContext>

    <GroupBox Margin="0,-3,0,0"
              BorderBrush="{DynamicResource TrimColor}"
              BorderThickness="1"
              Header=" Library ">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="IndexVisibility">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.3" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="DisplayStrategy">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StrategyList" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StrategyList" Storyboard.TargetProperty="(FrameworkElement.Height)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="300" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid Behaviours:GridUtils.RowDefinitions="*,Auto">
            <TreeView Grid.Row="0"
                      Behaviours:ScrollingPreview.VerticalScrollingPreviewTemplate="{DynamicResource ScrollingPreviewTemplate}"
                      BorderThickness="0"
                      ItemContainerStyle="{DynamicResource TreeViewItemStyle}"
                      ItemsSource="{Binding TreeViewSource.View}"
                      ItemTemplate="{Binding TreeViewItemTemplate}"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      VirtualizingStackPanel.VirtualizationMode="Recycling" />

            <Controls:ExplorerStrategyList x:Name="StrategyList"
                                           Grid.Row="0"
                                           Height="0"
                                           Margin="0,0,0,0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Bottom"
                                           Opacity="0" />

            <Border Grid.Row="1"
                    Margin="0,5,0,0"
                    BorderThickness="0">
                <Grid Behaviours:GridUtils.ColumnDefinitions="Auto,Auto,*,Auto">
                    <Button Grid.Column="0"
                            Margin="3"
                            Command="{Binding Path=ToggleStrategyDisplay}">
                        <StackPanel Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                            <TextBlock Margin="3,0,0,0"
                                       Foreground="{DynamicResource ControlTextColor}"
                                       Text="View" />
                            <TextBlock Margin="0,0,3,0"
                                       FontFamily="Webdings"
                                       FontSize="16"
                                       Foreground="{DynamicResource ControlTextColor}"
                                       Text="5" />
                        </StackPanel>
                    </Button>
                    <Button Grid.Column="1"
                            Width="23"
                            Height="23"
                            Margin="3"
                            Command="{Binding Path=ConfigureView}"
                            Content="{StaticResource Path_Configure}"
                            Foreground="{DynamicResource ControlTextColor}"
                            ToolTip="Configure View" />

                    <Button Grid.Column="3"
                            Margin="3"
                            Command="{Binding Filter}"
                            Content="Filter"
                            Foreground="{DynamicResource ControlTextColor}" />
                </Grid>
            </Border>
        </Grid>
    </GroupBox>
</UserControl>
