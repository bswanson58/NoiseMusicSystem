<UserControl x:Class="Noise.UI.Views.ArtistView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:controls="clr-namespace:Noise.UI.Controls"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:eventCommandTriggers="clr-namespace:Noise.UI.Behaviours.EventCommandTriggers"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:valueConverters="clr-namespace:ReusableBits.Ui.ValueConverters;assembly=ReusableBits.Ui"
			 xmlns:reusableBehaviours="clr-namespace:ReusableBits.Ui.Behaviours;assembly=ReusableBits.Ui"
			 xmlns:viewModels="clr-namespace:Noise.UI.ViewModels"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             prism:ViewModelLocator.AutoWireViewModel="True"
			 Height="200"
			 d:DesignWidth="800"
             d:DataContext="{d:DesignInstance viewModels:ArtistViewModel, IsDesignTimeCreatable=False}">

    <UserControl.Resources>
		<valueConverters:ByteImageConverter x:Key="ImageConverter" />
        <valueConverters:BooleanVisibilityConverter x:Key="DisplayIfFalse" IsHidden="True" TriggerValue="True"/>
        <valueConverters:BooleanVisibilityConverter x:Key="DisplayIfTrue" IsHidden="True" TriggerValue="False"/>
        <valueConverters:DefaultValueOpacityConverter x:Key="DefaultValueOpacityConverter" StandardOpacity="1.0" DefaultOpacity="0.3"/>
		<valueConverters:NullableBooleanOpacityConverter x:Key="OpaqueIfFalse" TrueOpacity="1.0" NullOpacity="1.0" FalseOpacity="0.3"/>
		<valueConverters:EmptyStringVisibilityConverter x:Key="CollapseIfStringEmpty" HideOnEmpty="True" IsHidden="False"/>

		<Style x:Key="PlayingItemBorder" TargetType="GroupBox" BasedOn="{StaticResource SectionBorderStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Artist.IsPlaying}" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource PlayingBrush}"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <GroupBox Margin="1,0,0,0" Style="{StaticResource PlayingItemBorder}" Header=" Artist ">
		<Grid>
            <Grid Visibility="{Binding ArtistValid, Converter={StaticResource DisplayIfFalse}}">
                <TextBlock VerticalAlignment="Center" Style="{StaticResource EmptyListTextStyle}" Text="Select an artist!" />
            </Grid>
            <Grid Visibility="{Binding ArtistValid, Converter={StaticResource DisplayIfTrue}}">
                <Border BorderThickness="0" CornerRadius="5">
                    <Grid Background="{StaticResource NoiseBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Image Grid.Column="0" MinWidth="50" MaxWidth="300" MinHeight="50" MaxHeight="180" Margin="3" HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="Uniform"
	    				   Source="{Binding ArtistImage, Converter={StaticResource ImageConverter}}" Cursor="Hand">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseLeftButtonDown" >
                                    <b:InvokeCommandAction Command="{Binding DisplayPortfolio}" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </Image>

                        <ContentPresenter Grid.Column="0" Margin="7,9,10,12" Opacity="0.5" Content="{StaticResource Path_UnknownArtist}"
                                          Visibility="{Binding ArtworkValid, Converter={StaticResource DisplayIfFalse}}"/>

                        <Grid Grid.Column="3" Margin="3,7,5,3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Viewbox Grid.Row="0" Stretch="Uniform" StretchDirection="DownOnly" HorizontalAlignment="Right" MaxWidth="400">
                                <TextBlock Style="{StaticResource LargeTitleStyle}" HorizontalAlignment="Right" Text="{Binding Artist.Name}"/>
                            </Viewbox>

                            <!--  Rating controls  -->
                            <StackPanel x:Name="_ratingPanel" Grid.Row="1" Margin="0,11,0,0" HorizontalAlignment="Right" Orientation="Horizontal">
                                <CheckBox x:Name="_favoriteControl" Margin="0,0,7,1" Style="{StaticResource FavoriteCheckBoxStyle}"
									  Opacity="{Binding Path=Artist.FavoriteValue, Mode=TwoWay, Converter={StaticResource OpaqueIfFalse}}"   
									  IsChecked="{Binding Artist.FavoriteValue, Mode=TwoWay}" />
                                <controls:RatingControl x:Name="_ratingControl" Style="{StaticResource NoiseRatingStyle}"
													Opacity="{Binding Artist.UiRating, Mode=TwoWay, Converter={StaticResource DefaultValueOpacityConverter}}"   
													Rating="{Binding Artist.UiRating, Mode=TwoWay}" UseAlternate="{Binding Artist.UseAlternateRating}" />

                                <StackPanel.Triggers>
                                    <EventTrigger SourceName="_ratingPanel" RoutedEvent="StackPanel.MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard Storyboard.TargetName="_favoriteControl" Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00">
                                                    <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.3" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                        <BeginStoryboard>
                                            <Storyboard Storyboard.TargetName="_ratingControl" Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00">
                                                    <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.3" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger SourceName="_ratingPanel" RoutedEvent="StackPanel.MouseLeave">
                                        <BeginStoryboard >
                                            <Storyboard Storyboard.TargetName="_favoriteControl" Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00">
                                                    <LinearDoubleKeyFrame Value="{Binding Path=Artist.FavoriteValue, Converter={StaticResource OpaqueIfFalse}}"
																	  KeyTime="0:0:0.7" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                        <BeginStoryboard >
                                            <Storyboard Storyboard.TargetName="_ratingControl" Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00">
                                                    <LinearDoubleKeyFrame Value="{Binding Path=Artist.UiRating, Converter={StaticResource DefaultValueOpacityConverter}}"
																	  KeyTime="0:0:0.7" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </StackPanel.Triggers>
                            </StackPanel>

                            <!-- Active Years -->
                            <TextBlock Grid.Row="2" Style="{StaticResource SmallTitleStyle}" Margin="0,7,0,0" HorizontalAlignment="Right" Text="{Binding Artist.ActiveYears}" 
								   Visibility="{Binding Artist.ActiveYears, Converter={StaticResource CollapseIfStringEmpty}}"/>

                            <!-- Genre -->
                            <controls:LinkLabel Grid.Row="3" HorizontalAlignment="Right" Margin="0,7,0,0"
                                                FontSize="16" FontFamily="Arial" Content="{Binding Artist.Genre}" LinkLabelBehavior="HoverUnderline">
                                <eventCommandTriggers:CommandSource.Trigger>
                                    <eventCommandTriggers:EventCommandTrigger Command="{Binding GenreClicked}" RoutedEvent="controls:LinkLabel.Click" />
                                </eventCommandTriggers:CommandSource.Trigger>
                            </controls:LinkLabel>

                            <!--  Artist website link  -->
                            <controls:LinkLabel Grid.Row="4" HorizontalAlignment="Right" Margin="0,7,0,0" Padding="0"  Content="{Binding Artist.Website}"
                                                LinkLabelBehavior="HoverUnderline">
                                <eventCommandTriggers:CommandSource.Trigger>
                                    <eventCommandTriggers:EventCommandTrigger Command="{Binding WebsiteClicked}" RoutedEvent="controls:LinkLabel.Click" />
                                </eventCommandTriggers:CommandSource.Trigger>
                            </controls:LinkLabel>

                            <!-- Button Group -->
                            <StackPanel Grid.Row="6" Tag="dimmed" Height="28" Margin="0,0,0,3" HorizontalAlignment="Right" Orientation="Horizontal" d:LayoutOverrides="Width">
                                <Button Margin="0,0,11,0" Style="{StaticResource GeneralButtonStyle}" 
									Content="Play Top Tracks" Command="{Binding PlayTopTracks}" ToolTip="Play the top tracks by this artist"/>
                                <Button Margin="0,0,5,0" Style="{StaticResource PathButtonStyle}" 
									Command="{Binding DisplayArtistInfoPanel}" Content="{StaticResource Path_Artist}" ToolTip="Display Artist Information" />
                                <Button Margin="0,0,5,0" Style="{StaticResource PathButtonStyle}"
									Command="{Binding DisplayAlbumInfoPanel}" Content="{StaticResource Path_Album}" ToolTip="Display Album Information" />
                                <Button Margin="0,0,5,0" Style="{StaticResource PathButtonStyle}"
                                        Command="{Binding DisplayRatedTracksPanel}" Content="{StaticResource Path_Rating}" ToolTip="Display All Rated Tracks" />
                                <Button Margin="0,0,5,0" Style="{StaticResource PathButtonStyle}"
                                        Command="{Binding DisplayArtistTracksPanel}" Content="{StaticResource Path_Music}" ToolTip="Display All Artist Tracks" />
                                <Button Style="{StaticResource PathButtonStyle}"
									Command="{Binding EditArtist}" Content="{StaticResource Path_Edit}" ToolTip="Edit Artist Properties" />
                            </StackPanel>

                        </Grid>
                    </Grid>
                    <b:Interaction.Behaviors>
                        <reusableBehaviours:WidgetOpacity TagName="dimmed" FadeInAnimation="{StaticResource WidgetEnterAnimation}" FadeOutAnimation="{StaticResource WidgetLeaveAnimation}"/>
                    </b:Interaction.Behaviors>
                </Border>
            </Grid>
        </Grid>
	</GroupBox>
</UserControl>
