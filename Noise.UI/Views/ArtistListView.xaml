<UserControl x:Class="Noise.UI.Views.ArtistListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:NoiseControls="clr-namespace:Noise.UI.Controls"
             xmlns:Dto="clr-namespace:Noise.UI.Dto"
             xmlns:Behaviours="clr-namespace:Noise.UI.Behaviours"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:ReusableBehaviours="clr-namespace:ReusableBits.Ui.Behaviours;assembly=ReusableBits.Ui"
             ReusableBehaviours:VisualStateAdapter.VisualState="{Binding VisualStateName}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    
    <UserControl.DataContext>
        <Binding Path="ArtistListViewModel" Source="{StaticResource ViewModelLocator}" />
    </UserControl.DataContext>
    
    <UserControl.Resources>
        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Padding" Value="1"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ArtistTemplate" DataType="{x:Type Dto:UiArtist}">
            <Border x:Name="ArtistPanel"
                Background="Transparent"
                BorderBrush="{DynamicResource ControlTextColor}"
                ContextMenu="{DynamicResource ArtistMenu}"
                CornerRadius="3">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Viewbox Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Stretch="Uniform" StretchDirection="DownOnly">
                        <TextBlock Style="{StaticResource ExplorerHeaderStyle}" Text="{Binding DisplayName}" />
                    </Viewbox>

                    <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
                        <CheckBox x:Name="ArtistIsFavorite" Margin="0,7,3,0"
                              Opacity="{Binding Path=UiIsFavorite, Converter={StaticResource DefaultValueOpacityConverter}}"
                              IsChecked="{Binding UiIsFavorite, Mode=TwoWay}"
                              Style="{DynamicResource FavoriteCheckBoxStyle}" />
                        <NoiseControls:RatingControl x:Name="ArtistRating" Margin="0,5,3,0"
                                                 Opacity="{Binding Path=UiRating, Converter={StaticResource DefaultValueOpacityConverter}}"
                                                 Rating="{Binding Path=UiRating, Mode=TwoWay}"
                                                 Style="{DynamicResource NoiseRatingStyle}" />
                    </StackPanel>

                    <StackPanel Grid.Row="1" Grid.Column="0" Margin="11,0,0,0" Orientation="Horizontal">
                        <TextBlock Style="{StaticResource ExplorerSubtitleStyle}" Foreground="{DynamicResource ControlTextColor}" Text="Albums: " />
                        <TextBlock x:Name="AlbumCount" Style="{StaticResource ExplorerSubtitleStyle}" Text="{Binding AlbumCount}" />
                    </StackPanel>

                    <TextBlock x:Name="Genre" Grid.Row="1" Grid.Column="1" Margin="0,0,3,0" Style="{StaticResource ExplorerSubtitleStyle}" HorizontalAlignment="Right" Text="{Binding Genre}" />
                </Grid>
            </Border>

            <DataTemplate.Triggers>
                <Trigger SourceName="ArtistPanel" Property="IsMouseOver" Value="True">
                    <Setter TargetName="ArtistIsFavorite" Property="Opacity" Value="1.0"/>
                    <Setter TargetName="ArtistRating" Property="Opacity" Value="1.0"/>
                </Trigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                    <Setter TargetName="AlbumCount" Property="FontWeight" Value="Bold"/>
                    <Setter TargetName="Genre" Property="FontWeight" Value="Bold"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>

    <GroupBox Style="{StaticResource SectionBorderStyle}" Header=" Artists ">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="_sortMenuVisibility">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.3" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="_normal" />
                <VisualState x:Name="_displaySortDescriptions">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="_sortList" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="_sortList" Storyboard.TargetProperty="(FrameworkElement.Height)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="300" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ListBox Grid.Row="0" BorderThickness="0" HorizontalContentAlignment="Stretch"
                     ItemsSource="{Binding ArtistList}"
                     ItemTemplate="{StaticResource ArtistTemplate}"
                     SelectedItem="{Binding SelectedArtist}">
                <i:Interaction.Behaviors>
                    <ReusableBehaviours:ListBoxSelectionVisible />
                </i:Interaction.Behaviors>
            </ListBox>

            <NoiseControls:SortDescriptionList x:Name="_sortList" Grid.Row="0" Height="0" Margin="7,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Opacity="0" />
            
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Margin="3" Height="21" Padding="3" HorizontalAlignment="Left" Command="{Binding Path=ToggleSortDisplay}"
                        Style="{StaticResource GeneralButtonStyle}" Content="{StaticResource Path_SortOrder}"
                        ToolTip="Set Artist Sort Order" />

                <TextBox Grid.Column="1" Margin="0,3" FontSize="14" BorderBrush="{StaticResource BorderColor}" Style="{StaticResource WaterMarkTextBox}"
                         Behaviours:TextBoxHelper.Watermark="enter artist filter text..." Behaviours:TextBoxHelper.ClearTextButton="True"
                         Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Grid>
    </GroupBox>
</UserControl>
