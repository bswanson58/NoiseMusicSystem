<UserControl x:Class="Noise.UI.Views.PlayQueueView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Behaviours="clr-namespace:Noise.UI.Behaviours"
             xmlns:Controls="clr-namespace:Noise.UI.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:DragDrop="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:EventCommandTriggers="clr-namespace:Noise.UI.Behaviours.EventCommandTriggers"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ReusableBehaviours="clr-namespace:ReusableBits.Ui.Behaviours;assembly=ReusableBits.Ui"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             d:DesignHeight="300"
             d:DesignWidth="300"
             DataContext="{Binding PlayQueueViewModel, Source={StaticResource ViewModelLocator}}"
             mc:Ignorable="d">
    <Control.Resources>
        <Behaviours:CommandReference x:Key="DeleteCommandReference" Command="{Binding DeleteCommand}" />

        <Style x:Key="QueueButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="17"/>
            <Setter Property="Width" Value="17"/>
            <Setter Property="FontFamily" Value="Webdings"/>
            <Setter Property="Margin" Value="3,0,0,0"/>
        </Style>

        <Style x:Key="MouseOverTrigger" TargetType="{x:Type Expander}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="IsExpanded" Value="True" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate TargetType="ListBox" x:Key="EmptyListBoxTemplate">
            <Grid Margin="5,15,5,0">
                <TextBlock FontSize="18" Foreground="LightGray" HorizontalAlignment="Center" Text="Play Something!" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="MouseOverExpanderTemplate" TargetType="{x:Type Expander}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="ExpandContent">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:0.15"
                                                   Storyboard.TargetName="ExpandSite"
                                                   Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)">
                        <SplineDoubleKeyFrame KeyTime="00:00:0.15" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="CollapseContent">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.15"
                                                   Storyboard.TargetName="ExpandSite"
                                                   Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)">
                        <SplineDoubleKeyFrame KeyTime="00:00:0.15" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3"
                    SnapsToDevicePixels="True">
                <DockPanel>
                    <ContentPresenter x:Name="HeaderSite"
                                      Grid.Column="0"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Center"
                                      Content="{TemplateBinding Header}"
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      DockPanel.Dock="Top"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="True" />
                    <ContentPresenter x:Name="ExpandSite"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding Content}"
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      DockPanel.Dock="Bottom"
                                      Focusable="False">
                        <ContentPresenter.LayoutTransform>
                            <ScaleTransform x:Name="scaleTransform"
                                            ScaleX="1"
                                            ScaleY="0" />
                        </ContentPresenter.LayoutTransform>
                    </ContentPresenter>
                </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource ExpandContent}" />
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource CollapseContent}" />
                    </Trigger.ExitActions>
                </Trigger>

                <Trigger Property="ExpandDirection" Value="Right">
                    <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                    <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Up">
                    <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                    <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Left">
                    <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                    <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Storyboard x:Key="ItemDeleteStoryboard" >
            <DoubleAnimation Storyboard.TargetName="listItemLayoutRoot" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5"/>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="listItemLayoutRoot" 
                                           Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <DataTemplate x:Key="QueueListItem">
            <Grid x:Name="listItemLayoutRoot" >
                <Grid.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                    </TransformGroup>
                </Grid.LayoutTransform>

                <Expander Margin="-9,0,0,0" Style="{StaticResource MouseOverTrigger}" Template="{DynamicResource MouseOverExpanderTemplate}">
                    <Expander.Header>
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" Margin="0,-3,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="40" />
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0">
                                    <TextBlock Margin="0,2,0,0" FontFamily="WebDings" FontSize="18" Foreground="LightGreen" Text="4"
                                       Visibility="{Binding Path=QueuedTrack.IsPlaying, Converter={StaticResource BooleanVisibilityConverter}}" />
                                    <TextBlock Margin="7,0,0,0" FontSize="14" FontWeight="Bold" Foreground="Red" Text="!"
                                       Visibility="{Binding Path=QueuedTrack.IsFaulted, Converter={StaticResource BooleanVisibilityConverter}}" />
                                </Grid>

                                <TextBlock x:Name="TrackName" Grid.Column="1" FontSize="14"
                                       ReusableBehaviours:FadeTrimming.IsEnabled="True"
                                       ReusableBehaviours:FadeTrimming.ShowTextInToolTipWhenTrimmed="True"
                                       Text="{Binding Path=QueuedTrack.Name}" />

                                <TextBlock x:Name="TrackDuration" Grid.Column="2" FontSize="14" VerticalAlignment="Top" TextAlignment="Right"
                                       Text="{Binding Path=QueuedTrack.Track.Duration, Converter={StaticResource TimeSpanConverter}}"/>
                            </Grid>

                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock x:Name="AlbumName" Grid.Column="1" Margin="5,0" FontSize="11" Foreground="Gray"
                                       ReusableBehaviours:FadeTrimming.IsEnabled="True"
                                       ReusableBehaviours:FadeTrimming.ShowTextInToolTipWhenTrimmed="True"
                                       Text="{Binding Path=QueuedTrack.AlbumName}" />
                            </Grid>
                        </Grid>
                    </Expander.Header>
                    <Grid Margin="3,3,0,1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Style="{StaticResource QueueButtonStyle}"
                            Command="{Binding Path=Play}" Content="4" ToolTip="Play Now" />
                        <Button Grid.Column="1" Style="{StaticResource QueueButtonStyle}"
                            Command="{Binding Path=PlayFromHere}" Content="8" ToolTip="Continue play from here" />
                        <Button Grid.Column="2" Style="{StaticResource QueueButtonStyle}"
                            Command="{Binding Path=DisplayInfo}" Content="{StaticResource Path_Information}" ToolTip="Display Artist and Album display" />
                        <Button Grid.Column="3" Style="{StaticResource QueueButtonStyle}"
                            Command="{Binding Path=MoveUp}" Content="5" ToolTip="Move track up in queue" />
                        <Button Grid.Column="4" Style="{StaticResource QueueButtonStyle}"
                            Command="{Binding Path=MoveDown}" Content="6" ToolTip="Move track down in queue" />
                        <Button Grid.Column="5" Style="{StaticResource QueueButtonStyle}"
                            Command="{Binding Path=Dequeue}" Content="r" ToolTip="Remove track from queue" />

                        <!--  Favorite and Rating  -->
                        <StackPanel Grid.Column="6" HorizontalAlignment="Right" Orientation="Horizontal">
                            <CheckBox Width="15" Height="15" Margin="0,0,4,2" VerticalAlignment="Center"
                                  IsChecked="{Binding Path=IsFavorite, Mode=TwoWay}"
                                  Style="{StaticResource FavoriteCheckBoxStyle}" />
                            <Controls:RatingControl Rating="{Binding Path=Rating, Mode=TwoWay}" Style="{StaticResource NoiseRatingStyle}" />
                        </StackPanel>
                    </Grid>
                </Expander>
            </Grid>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=QueuedTrack.HasPlayed}" Value="true">
                    <Setter TargetName="TrackName" Property="Foreground" Value="LightGray" />
                    <Setter TargetName="AlbumName" Property="Foreground" Value="LightGray" />
                    <Setter TargetName="TrackDuration" Property="Foreground" Value="LightGray" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=QueuedTrack.IsPlaying}" Value="true">
                    <Setter TargetName="TrackName" Property="FontWeight" Value="Bold" />
                    <Setter TargetName="AlbumName" Property="FontWeight" Value="Bold" />
                    <Setter TargetName="TrackDuration" Property="FontWeight" Value="Bold" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=QueuedTrack.IsStrategyQueued, Mode=OneTime}" Value="true">
                    <Setter TargetName="TrackName" Property="FontStyle" Value="Italic" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsDeleting}" Value="true">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource ItemDeleteStoryboard}"/>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <Style x:Key="BoldedDragListBoxItemStyle" BasedOn="{StaticResource AnimateOnInsertListBoxItemStyle}" TargetType="{x:Type ListBoxItem}">
            <Style.Triggers>
                <Trigger Property="Behaviours:ListViewItemDragState.IsBeingDragged" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Control.Resources>

    <Control.InputBindings>
        <KeyBinding Key="Delete" Command="{StaticResource DeleteCommandReference}" />
    </Control.InputBindings>

    <GroupBox Margin="2,0,5,0" Style="{StaticResource SectionBorderStyle}" Header=" Play Queue ">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ListBox x:Name="PlayQueueListView"
                     Grid.Row="0"
                     Behaviours:ListViewEnsureVisible.VisibleIndex="{Binding Path=PlayingIndex, Mode=OneWay}"
                     BorderThickness="0"
                     DragDrop:DragDrop.DropHandler="{Binding}"
                     DragDrop:DragDrop.IsDragSource="true"
                     DragDrop:DragDrop.IsDropTarget="true"
                     HorizontalContentAlignment="Stretch"
                     ItemsSource="{Binding Path=QueueList}"
                     ItemTemplate="{StaticResource QueueListItem}"
                     ItemContainerStyle="{StaticResource BoldedDragListBoxItemStyle}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                     SelectedIndex="{Binding Path=SelectedIndex}"
                     SelectedItem="{Binding Path=SelectedItem}">
                <i:Interaction.Behaviors>
                    <ReusableBehaviours:EmptyListBehavior EmptyTemplate="{StaticResource EmptyListBoxTemplate}"/>
                </i:Interaction.Behaviors>
                <EventCommandTriggers:CommandSource.Trigger>
                    <EventCommandTriggers:CommandTriggerGroup>
                        <EventCommandTriggers:EventCommandTrigger Command="{Binding Path=PlayRequested}"
                                                                  CustomParameter="{Binding ElementName=PlayQueueListView,
                                                                                            Path=SelectedValue}"
                                                                  RoutedEvent="ListBoxItem.MouseDoubleClick" />
                    </EventCommandTriggers:CommandTriggerGroup>
                </EventCommandTriggers:CommandSource.Trigger>
            </ListBox>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Margin="5,5,3,3" Orientation="Vertical">
                    <Rectangle Height="1" StrokeThickness="0" Fill="{DynamicResource TrimColor}" />
                    <Rectangle Height="1" StrokeThickness="0" Fill="LightGray" />
                </StackPanel>


                <StackPanel Grid.Row="1" Margin="0,1,0,1" HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button Margin="3" Style="{StaticResource GeneralButtonStyle}"
                            Command="{Binding Path=MoveItemUp}" Content="5" FontFamily="Webdings" />
                    <Button Margin="3" Style="{StaticResource GeneralButtonStyle}"
                            Command="{Binding Path=MoveItemDown}" Content="6" FontFamily="Webdings" />
                    <Button Margin="3" Style="{StaticResource GeneralButtonStyle}"
                            Command="{Binding Path=RemoveItem}" Content="r" FontFamily="WebDings" />
                    <Button Margin="3" Style="{StaticResource GeneralButtonStyle}"
                            Command="{Binding Path=ClearQueue}" Content="Clear" />
                    <Button Margin="3" Style="{StaticResource GeneralButtonStyle}"
                            Command="{Binding Path=ClearPlayed}" Content="Clear Played"/>
                </StackPanel>

                <Grid Grid.Row="2" Margin="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!--Button Grid.Column="0" Margin="3,0,0,0" Style="{StaticResource GeneralButtonStyle}" Command="{Binding Path=SavePlayList}" Content="Save" /-->
                    <TextBlock Grid.Column="2" Margin="0,0,5,0" Style="{StaticResource ControlTitleStyle}" VerticalAlignment="Center" Text="Play Selection:"/>
                    <ComboBox Grid.Column="3" Width="110" DisplayMemberPath="Title" ItemsSource="{Binding Path=PlayStrategyList}"
                              SelectedValue="{Binding Path=PlayStrategy}" SelectedValuePath="Strategy" />
                </Grid>

                <Grid Grid.Row="3" Margin="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Margin="3,0" Style="{StaticResource GeneralButtonStyle}" Content="Start" Command="{Binding StartStrategy}" />
                    <TextBlock Grid.Column="2" Margin="0,0,5,0" Style="{StaticResource ControlTitleStyle}" VerticalAlignment="Center" Text="When Exhausted:"/>
                    <ComboBox Grid.Column="3" Width="110" DisplayMemberPath="Title" ItemsSource="{Binding Path=ExhaustedStrategyList}"
                              SelectedValue="{Binding Path=ExhaustedStrategy}" SelectedValuePath="Strategy" />
                </Grid>

                <Grid Grid.Row="4" Margin="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource ControlTitleStyle}"
                               Text="Total Time:" />
                    <TextBlock Grid.Row="0" Grid.Column="1" Margin="3,0,3,0" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource ControlTitleStyle}"
                               Text="{Binding Path=TotalTime, Converter={StaticResource TimeSpanConverter}}" />
                    <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource ControlTitleStyle}"
                               Text="Remaining Time:" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Margin="3,0,3,0" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource ControlTitleStyle}"
                               Text="{Binding Path=RemainingTime, Converter={StaticResource TimeSpanConverter}}" />
                </Grid>
            </Grid>
        </Grid>
    </GroupBox>
</UserControl>
