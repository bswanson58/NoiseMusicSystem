<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
					xmlns:NoiseControls="clr-namespace:Noise.UI.Controls;assembly=Noise.UI"
					xmlns:Behaviours="clr-namespace:Noise.UI.Behaviours;assembly=Noise.UI"
					xmlns:ReusableConverters="clr-namespace:ReusableBits.Ui.ValueConverters;assembly=ReusableBits.Ui">

<!-- Add in the MahApps resource so these are based on those -->
<ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
</ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="ControlTextColor" Color="#FF878787" />
	<SolidColorBrush x:Key="TrimColor" Color="#FF878787" />
	<SolidColorBrush x:Key="BorderColor" Color="#FFD0D0D0" />
	<SolidColorBrush x:Key="BorderTextColor" Color="#FFA0A0A0"/>

    <Style x:Key="StartupFontStyle" TargetType="Control">
		<Setter Property="FontFamily" Value="Arial"/>
		<Setter Property="FontSize" Value="28"/>
	</Style>
	<Style x:Key="StartupSmallFontStyle" TargetType="Control">
		<Setter Property="FontFamily" Value="Arial"/>
		<Setter Property="FontSize" Value="16"/>
	</Style>
	<Style x:Key="StartupTextStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Arial"/>
		<Setter Property="FontSize" Value="28"/>
	</Style>
	<Style x:Key="StartupBorderStyle" TargetType="GroupBox" BasedOn="{StaticResource StartupFontStyle}">
		<Setter Property="BorderThickness" Value="1"/>
	</Style>
	<Style x:Key="StartupButtonStyle" TargetType="Button" BasedOn="{StaticResource StartupFontStyle}">
		<Setter Property="FontSize" Value="22"/>
		<Setter Property="Padding" Value="11,3"/>
	</Style>

	<Style x:Key="ExplorerHeaderStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Segoe UI Semibold"/>
		<Setter Property="FontSize" Value="18"/>
	</Style>
	<Style x:Key="ExplorerTitleStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontSize" Value="18"/>
	</Style>
	<Style x:Key="ExplorerSubtitleStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>

	<Style x:Key="LargeTitleStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Arial"/>
		<Setter Property="FontSize" Value="32"/>
	</Style>

	<Style x:Key="MediumTitleStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Arial"/>
		<Setter Property="FontSize" Value="28"/>
	</Style>

	<Style x:Key="SmallTitleStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Arial"/>
		<Setter Property="FontSize" Value="16"/>
	</Style>

	<Style x:Key="ControlTitleStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>

    <Style x:Key="GeneralButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
		<Setter Property="Padding" Value="5,3"/>
	</Style>

    <Style x:Key="GeneralComboStyle" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
		<Setter Property="Padding" Value="5,3"/>
	</Style>
	
	<Style x:Key="TransportButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
		<Setter Property="Height" Value="29"/>
		<Setter Property="Width" Value="29"/>
		<Setter Property="FontFamily" Value="Webdings"/>
		<Setter Property="FontSize" Value="16"/>
	</Style>

    <Style x:Key="QueueButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="6,0,0,0"/>
    </Style>

	<Style x:Key="ListViewTextStyle" TargetType="TextBlock">
		<Setter Property="FontSize" Value="14"></Setter>
	</Style>

    <Style x:Key="ListViewItemStretch" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MetroListViewItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <!-- Removes the white border around the GroupBox border -->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="SectionBorderStyle" TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="#D5DFE5" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                        <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border Grid.Column="0" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabControlStyle" TargetType="{x:Type TabItem}">
		<Setter Property="Header" Value="{Binding Content.Tag, RelativeSource={RelativeSource Self}}" />
		<Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource ControlTextColor}"/>
		<Setter Property="FontSize" Value="18"/>
		<Setter Property="Padding" Value="6,1,6,1"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid SnapsToDevicePixels="true">
						<Border x:Name="Bd" BorderThickness="0" CornerRadius="5" Padding="{TemplateBinding Padding}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								
								<ContentPresenter x:Name="Content" Grid.Column="0" ContentSource="Header"
												  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
												  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
								
								<Ellipse x:Name="Marker" Grid.Column="1" Height="5" Width="5" VerticalAlignment="Top" Margin="3,5,0,0" Fill="{DynamicResource SignatureBrush}" Visibility="Collapsed"/>
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
					    <MultiTrigger>
					        <MultiTrigger.Conditions>
					            <Condition Property="IsMouseOver" Value="True" />
					            <Condition Property="IsSelected" Value="False" />
					        </MultiTrigger.Conditions>
					        <Setter Property="Foreground" Value="{StaticResource BorderColor}" />
					    </MultiTrigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Foreground" Value="{DynamicResource SignatureBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<DataTrigger Binding="{Binding Content.AllowDrop, RelativeSource={RelativeSource Self}}" Value="True">
							<Setter TargetName="Marker" Property="Visibility" Value="Visible"/>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TextBox watermarks -->
	<ReusableConverters:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter" />
	<Style x:Key="WaterMarkTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="Behaviours:TextBoxHelper.IsMonitoring" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="EnterGotFocus" >
							<DoubleAnimation Duration="0:0:0.7" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
						</Storyboard>
						<Storyboard x:Key="ExitGotFocus" >
							<DoubleAnimation Duration="0:0:0.7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
						</Storyboard>

						<Storyboard x:Key="EnterHasText" >
							<DoubleAnimation Duration="0:0:0.7" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
						</Storyboard>
						<Storyboard x:Key="ExitHasText" >
							<DoubleAnimation Duration="0:0:0.7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border Name="Bd" 
							 Background="{TemplateBinding Background}"
							 BorderBrush="{TemplateBinding BorderBrush}"
							 BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="1" />
							<TextBlock x:Name="Message" Text="{TemplateBinding Behaviours:TextBoxHelper.Watermark}" FontStyle="Italic" Margin="9,0,0,0"
										Foreground="Gray" IsHitTestVisible="False" FontFamily="Calibri" Opacity="0.7" HorizontalAlignment="Left" VerticalAlignment="Center" />
							<Button x:Name="PART_ClearText" BorderThickness="0" Foreground="Gray" Background="Transparent"
										HorizontalAlignment="Right" Margin="3" FontFamily="Segoe UI Symbol" Content="✖" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},
										Path=(Behaviours:TextBoxHelper.ClearTextButton), Converter={StaticResource BooleanVisibilityConverter}}" IsTabStop="False" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Behaviours:TextBoxHelper.HasText" Value="False"/>
								<Condition Property="IsFocused" Value="True"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource EnterGotFocus}"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource ExitGotFocus}"/>
							</MultiTrigger.ExitActions>
						</MultiTrigger>

						<Trigger Property="Behaviours:TextBoxHelper.HasText" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource EnterHasText}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource ExitHasText}"/>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Gridsplitter Grabber  -->
	<Style x:Key="GridSplitterPreviewStyle">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Fill="#80000000" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="GridSplitterVerticalStyle" TargetType="{x:Type GridSplitter}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
		<Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GridSplitter}">
					<Border x:Name="Grabber" Opacity="0.15" CornerRadius="5"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<Canvas Width="7" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center" RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True">
							<Line Stroke="#A0A0A0" StrokeThickness="1" X1="2" Y1="0" X2="2" Y2="30" />
							<Line Stroke="#A0A0A0" StrokeThickness="1" X1="6" Y1="0" X2="6" Y2="30" />
						</Canvas>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger SourceName="Grabber" Property="IsMouseOver" Value="True">
							<Setter TargetName="Grabber" Property="Opacity" Value="1.0"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="GridSplitterHorizontalStyle" TargetType="{x:Type GridSplitter}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
		<Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GridSplitter}">
					<Border x:Name="Grabber" Opacity="0.15" CornerRadius="5"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<Canvas Width="30" Height="7" HorizontalAlignment="Center" VerticalAlignment="Center" RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True">
							<Line Stroke="#A0A0A0" StrokeThickness="1" X1="0" Y1="3" X2="30" Y2="3" />
							<Line Stroke="#A0A0A0" StrokeThickness="1" X1="0" Y1="6" X2="30" Y2="6" />
						</Canvas>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger SourceName="Grabber" Property="IsMouseOver" Value="True">
							<Setter TargetName="Grabber" Property="Opacity" Value="1.0"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Play column header style -->
	<DataTemplate x:Key="PlayColumnHeaderTemplate">
		<TextBlock FontFamily="WebDings" Text="4"/>
	</DataTemplate>
	
	<!-- Edit column header style -->
	<DataTemplate x:Key="EditColumnHeaderTemplate">
		<Viewbox Height="12" Width="12">
			<Canvas Width="100" Height="100" ClipToBounds="True">
				<Path>
					<Path.Data>
						<PathGeometry FillRule="Nonzero" Figures="M4.744,4.743C-1.581,11.068,-1.581,21.321,4.744,27.646L27.646,4.743C21.322,-1.582,11.068,-1.582,4.744,4.743z" />
					</Path.Data>
				</Path>
				<Path>
					<Path.Data>
						<PathGeometry FillRule="Nonzero" Figures="M60.893,83.794L100,100 83.795,60.893 33.914,11.013 11.012,33.914 60.893,83.794z M66.105,73.646C68.187,71.562 72.128,72.129 72.998,72.999 72.13,72.131 71.562,68.187 73.644,66.105 75.726,64.023 79.886,63.283 79.886,63.283L89.198,85.753 85.752,89.199 63.282,79.888C63.282,79.889,64.023,75.729,66.105,73.646z" />
					</Path.Data>
				</Path>
			</Canvas>
		</Viewbox>
	</DataTemplate>

	<!-- Rating control -->
	<Style x:Key="NoiseRatingStyle" TargetType="{x:Type NoiseControls:RatingControl}">
		<Setter Property="Height" Value="13"/>
		<Setter Property="RatingCount" Value="5"/>
		<Setter Property="HoverColor" Value="LightBlue"/>
		<Setter Property="RatedColor" Value="{DynamicResource SignatureBrush}"/>
		<Setter Property="UnratedColor" Value="{StaticResource ControlTextColor}"/>
		<Setter Property="DislikeColor" Value="Red"/>
	</Style>
	
</ResourceDictionary>