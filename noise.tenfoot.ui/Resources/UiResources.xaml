<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Color Scheme: http://colorschemedesigner.com/#3I11TvvGrw0w0 -->
    <Color x:Key="PrimaryColor">#1655C8</Color>
    <Color x:Key="PrimaryAccent">#325596</Color>
    <Color x:Key="PrimaryDark">#073382</Color>
    <Color x:Key="PrimaryHighlight">#4C81E4</Color>
    <Color x:Key="PrimaryLight">#749CE4</Color>
    <Color x:Key="FocusColor">#FFCF75</Color>

    <!-- Logical Color Mappings -->
    <DynamicResource x:Key="GradientStartColor" ResourceKey="PrimaryLight"/>
    <DynamicResource x:Key="GradientStopColor" ResourceKey="PrimaryHighlight"/>
    <DynamicResource x:Key="ContentBackgroundColor" ResourceKey="PrimaryColor"/>

    <DynamicResource x:Key="TextColor" ResourceKey="PrimaryColor"/>
    <DynamicResource x:Key="LightTextColor" ResourceKey="PrimaryAccent"/>
    <DynamicResource x:Key="DarkTextColor" ResourceKey="PrimaryDark"/>

    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource PrimaryAccent}"/>
    <SolidColorBrush x:Key="DarkBrush" Color="{StaticResource PrimaryDark}"/>
    <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource PrimaryHighlight}"/>
    <SolidColorBrush x:Key="LightBrush" Color="{StaticResource PrimaryLight}"/>
    <SolidColorBrush x:Key="FocusBrush" Color="{StaticResource FocusColor}"/>

    <!-- Component Text Mapppings -->
    <SolidColorBrush x:Key="ButtonFocusBrush" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="ButtonHoverBrush" Color="{StaticResource PrimaryHighlight}"/>
    <SolidColorBrush x:Key="ButtonContentBrush" Color="{StaticResource PrimaryColor}"/>
    
    <SolidColorBrush x:Key="ContentBackgroundBrush" Color="{StaticResource ContentBackgroundColor}"/>
    
    <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>
    <SolidColorBrush x:Key="DarkTextBrush" Color="{StaticResource DarkTextColor}"/>
    <SolidColorBrush x:Key="LightTextBrush" Color="{StaticResource LightTextColor}"/>

    <Style x:Key="BasicTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontStyle" Value="Normal" />
    </Style>

    <Style x:Key="ContentTextStyle" BasedOn="{StaticResource BasicTextStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
    </Style>
    
    <Style x:Key="ListTextStyle" BasedOn="{StaticResource BasicTextStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
        <Setter Property="FontSize" Value="28"/>
    </Style>

    <Style x:Key="ListHighlightTextStyle" BasedOn="{StaticResource BasicTextStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource FocusBrush}" />
        <Setter Property="FontSize" Value="32"/>
    </Style>
    
    <Style x:Key="HighlightTextStyle" BasedOn="{StaticResource BasicTextStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource FocusBrush}" />
    </Style>

    <Style x:Key="TenfootButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="65"/>
        <Setter Property="Height" Value="65"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonContentBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverFill">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HoverFill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="FocusCircle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusCircle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusCircle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="HoverFill" Fill="{StaticResource ButtonHoverBrush}" Stroke="{x:Null}" StrokeThickness="5" Opacity="0.5" Visibility="Hidden"/>
                        <Ellipse x:Name="FocusCircle" Fill="{x:Null}" Stroke="{StaticResource ButtonFocusBrush}" StrokeThickness="3" Visibility="Hidden" Opacity="0"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Viewbox x:Key="Path_Home" x:Shared="False">
        <Grid>
            <Grid Width="32" Height="32" Visibility="Collapsed" />
            <Path Data="F1M1337.43,1007.95L1337.43,1027.45 1350.23,1027.45 1350.23,1010.99 1362.27,1010.99 1362.27,1027.51 1374.51,1027.51 1374.51,1007.83 1356.25,991.558 1337.43,1007.95z M1374.48,995.962L1374.48,985.032 1368.65,985.032 1368.65,990.799 1356.17,979.755 1356.13,979.713 1329.47,1003.31 1333.08,1007.39 1356.13,986.992 1379.2,1007.41 1382.81,1003.34 1374.48,995.962z"
                  Stretch="Uniform" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" Width="16" Height="16" Margin="3" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <RotateTransform Angle="0" />
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </TransformGroup.Children>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
    </Viewbox>

    <Viewbox x:Key="Path_Back" x:Shared="False">
        <Grid>
            <Grid Width="32" Height="32" Visibility="Collapsed" />
            <Path Data="F1M-800.86,-1379.55L-781.99,-1360.68 -782.125,-1360.54 -792.356,-1360.54 -809.825,-1378.01 -815.075,-1383.26 -792.494,-1405.84 -781.99,-1405.84 -800.86,-1386.97 -751.074,-1386.97 -751.074,-1379.55 -800.86,-1379.55z" 
                  Stretch="Uniform" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" Width="22" Height="22" Margin="3" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <RotateTransform Angle="0" />
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </TransformGroup.Children>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
    </Viewbox>

    <Viewbox x:Key="Path_MediaPlay" x:Shared="False">
        <Grid Margin="31,27,23,27">
            <Path Data="F1M-224.553,1265L-246.174,1283.52 -267.792,1302.04 -267.792,1265 -267.792,1227.97 -246.174,1246.49 -224.553,1265z" 
                  Stretch="Uniform" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <RotateTransform Angle="0" />
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </TransformGroup.Children>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
    </Viewbox>

    <Viewbox x:Key="Path_MediaStop" x:Shared="False">
        <Grid Margin="27">
            <Path Data="M0,0L64.992,0 64.992,64.992 0,64.992z"
                  Stretch="Uniform" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <RotateTransform Angle="0" />
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </TransformGroup.Children>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
    </Viewbox>

    <Viewbox x:Key="Path_MediaPause" x:Shared="False">
        <Grid Margin="25">
            <Path Data="M27.270001,0L44.310001,0 44.310001,48.643002 27.270001,48.643002z M0,0L17.040001,0 17.040001,48.643002 0,48.643002z" 
                  Stretch="Uniform" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <RotateTransform Angle="0" />
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </TransformGroup.Children>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
    </Viewbox>

    <Viewbox x:Key="Path_MediaNext" x:Shared="False">
        <Grid Margin="25">
            <Path Data="M0,0L15.908,0 15.908,20.125872 28.130381,13.333224 52.118999,0 52.118999,26.66655 52.118999,53.333 28.130381,39.999775 15.908,33.20718 15.908,53.333 0,53.333z" 
                  Stretch="Uniform" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <RotateTransform Angle="0" />
                            <ScaleTransform ScaleX="-1" ScaleY="1" />
                        </TransformGroup.Children>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
    </Viewbox>

    <Viewbox x:Key="Path_MediaPrevious">
        <Grid Margin="25">
            <Path Data="M0,0L15.908,0 15.908,20.125872 28.130381,13.333224 52.118999,0 52.118999,26.66655 52.118999,53.333 28.130381,39.999775 15.908,33.20718 15.908,53.333 0,53.333z" 
                  Stretch="Uniform" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <RotateTransform Angle="0" />
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </TransformGroup.Children>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
    </Viewbox>
</ResourceDictionary>
